local TestVM = require("Game.UI.Test.TestVM")
local WindowBase = require("LuaFramework.Views.WindowBase")
local BindingMode = require("LuaFramework.Binding.BindingMode")
local BindingExtension = require("LuaFramework.Binding.BindingExtension")

local TextExt = require("LuaFramework.Views.Components.TextExt")
local ButtonExt = require("LuaFramework.Views.Components.ButtonExt")
local InputFieldExt = require("LuaFramework.Views.Components.InputFieldExt")
local GameObjectExt = require("LuaFramework.Views.Components.GameObjectExt")
local ToggleExt = require("LuaFramework.Views.Components.ToggleExt")

local SimpleCommand = require("LuaFramework.Commands.SimpleCommand")

local TestV = class("TestV", WindowBase)

TestV.PrefabPath = "TestV"

function TestV:ctor(bundle)
   WindowBase.ctor(self, bundle)

   self.viewModel = TestVM.new()
   self.bindingExt = BindingExtension.new(self)
   self.bindingSet = self.bindingExt:CreateBindingSetWithContext(self.viewModel)





























end

function TestV:TestFunc(sender, args)
   assert({ sender, args }, "")
   print("hahaha")
end

function TestV:OnCreate()
   WindowBase.OnCreate(self)
   print("child OnCreate")















   self.viewModel.text:BindWithName(self, TextExt, "text", { BindingMode.OneWay })
   self.viewModel.text1:BindWithName(self, TextExt, "text1", { BindingMode.OneWay })
   self.viewModel.button:BindWithName(self, ButtonExt, "button", { BindingMode.OneWay })
   self.viewModel.inputField:BindWithName(self, InputFieldExt, "inputField", { BindingMode.OneWay })
   self.viewModel.gameObject:BindWithName(self, GameObjectExt, "gameObject", { BindingMode.OneWay })
   self.viewModel.toggle_1:BindWithName(self, ToggleExt, "toggle_1", { BindingMode.OneWay })
   self.viewModel.toggle_2:BindWithName(self, ToggleExt, "toggle_2", { BindingMode.OneWay })


   self.bindingSet:Build()
end

function TestV:OnShow()
   WindowBase.OnShow(self)

   self.viewModel.text.Text = "hahaha"
   self.viewModel.text.Color = CS.UnityEngine.Color.red
   self.viewModel.text1.Text = "哈哈哈"
   self.viewModel.text1.Color = CS.UnityEngine.Color.green
   self.viewModel.button.SimpleCommand = SimpleCommand.new(bindevent(self, self.TestButtonSimpleCommand))
   self.viewModel.inputField.Text = "你好啊"
   self.viewModel.gameObject.ActiveSelf = false
   self.viewModel.toggle_1.SimpleCommand = SimpleCommand.new(bindevent(self, self.TestToggleSimpleCommand, "toggle_1"))
   self.viewModel.toggle_2.SimpleCommand = SimpleCommand.new(bindevent(self, self.TestToggleSimpleCommand, "toggle_2"))








end

function TestV:TestButtonSimpleCommand(...)
   for key, value in ipairs({ ... }) do
      print("key : " .. key .. " value : " .. tostring(value))
   end
   print("TestButtonSimpleCommand")
end

function TestV:TestToggleSimpleCommand(...)
   for key, value in ipairs({ ... }) do
      print("key : " .. key .. " value : " .. tostring(value))
   end
   print("TestToggleSimpleCommand")
end

function TestV:dtor()
end

return TestV
