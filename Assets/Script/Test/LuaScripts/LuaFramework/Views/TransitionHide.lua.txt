local Transition = require("LuaFramework.Views.Transition")

local TransitionHide = class("TransitionHide", Transition)

function TransitionHide:ctor(manager, window, dismiss)
    Transition.ctor(self, window)
    self.dismiss = dismiss
    self.manager = manager
end

function TransitionHide:DoTransition()
    Transition.DoTransition(self)
    local current = self.Window
    if self.manager:IndexOf(current) == 1 then
        if current.Activated then
            local passivate = current:Passivate(self.AnimationDisabled)
            Coroutine:Yield(passivate:WaitForDone())
        end

        if current.Visibility then
            local hide = current:DoHide(self.AnimationDisabled)
            Coroutine:Yield(hide:WaitForDone())
        end
    else
        if current.Visibility then
            local hide = current:DoHide(self.AnimationDisabled)
            Coroutine:Yield(hide:WaitForDone())
        end
    end

    if self.dismiss then
        current:DoDismiss()
    end
end

function TransitionHide:dtor()
    
end

return TransitionHide