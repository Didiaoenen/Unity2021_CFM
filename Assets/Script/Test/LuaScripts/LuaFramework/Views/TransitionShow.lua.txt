local Transition = require("LuaFramework.Views.Transition")

local TransitionShow = class("TransitionShow", Transition)

function TransitionShow:ctor(manager, window)
    Transition.ctor(self, window)
    self.manager = manager
end

function TransitionShow:Overlay(previous, current)
    if not previous or previous.WindowType == WindowType.FULL then
        return ActionType.None
    end

    if previous.WindowType == WindowType.POPUP then
        return ActionType.Dismiss
    end

    return ActionType.None
end

function TransitionShow:DoTransition()
    Transition.DoTransition(self)
    local current = self.Window
    local layer = (self.Layer < 0 or current.WindowType == WindowType.DIALOG or current.WindowType == WindowType.PROGRESS) and 0 or self.Layer
    if layer < 0 then
        local visibleCount = self.manager.VisibleCount
        if layer > visibleCount then
            layer = visibleCount
        end
    end
    self.Layer = layer

    local previous = false
    if previous then
        if previous.Activated then
            local passivate = previous:Passivate(self.AnimationDisabled)
            Coroutine.Yield(passivate:WaitForDone())
        end

        local policy = self.OverlayPolicy
        if not policy then
            policy = self.Overlay
        end

        local actionType = policy(self, previous, current)
        if actionType == ActionType.Hide then
            previous:DoHide(self.AnimationDisabled)
        elseif actionType == ActionType.Dismiss then
            previous:DoHide(self.AnimationDisabled):Callbackable():OnCallback(function (r)
                previous:DoDismiss()
            end)
        end
    end

    if not current.Visibility then
        local show = current:DoShow(self.AnimationDisabled)
        Coroutine.Yield(show:WaitForDone())
    end

    if self.manager.Activated and current == self.manager.Current then
        local activate = current:Activate(self.AnimationDisabled)
        Coroutine.Yield(activate:WaitForDone())
    end
end

function TransitionShow:dtor()
    
end

return TransitionShow