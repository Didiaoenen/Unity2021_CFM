local Misc = require("LuaFramework.Common.Misc")
local CoroutineExt = require("LuaFramework.CSharpObject.CoroutineExt")
local ExecutorsExt = require("LuaFramework.CSharpObject.ExecutorsExt")

local DefaultUIViewLocator = class("DefaultUIViewLocator")

function DefaultUIViewLocator.LoadAsync(name, ctype)
   local result = (classget(CS.Asynchronous, Misc.CSName.ProgressResult_1_Single))(true)
   ExecutorsExt.Instance:RunOnCoroutineNoReturn(CoroutineExt.GetEnumerator(function()
      DefaultUIViewLocator.DoLoad(result, name, ctype)
   end))
   return result
end

function DefaultUIViewLocator.DoLoad(promise, name, cType)
   promise:UpdateProgress(0)
   local request = CS.UnityEngine.Resources.LoadAsync(name, cType)
   while not request.isDone do
      promise:UpdateProgress(request.progress)
      CoroutineExt.Wait(3)
   end

   local ins = CS.UnityEngine.Object.Instantiate(request.asset)
   ins.name = name

   promise:UpdateProgress(1)
   promise:SetResult(ins)
end

return DefaultUIViewLocator
