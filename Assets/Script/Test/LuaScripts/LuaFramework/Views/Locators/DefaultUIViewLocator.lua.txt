local Executors = require("LuaFramework.CSharpObject.Executors")
local Coroutine = require("LuaFramework.CSharpObject.Coroutine")

local DefaultUIViewLocator = class("DefaultUIViewLocator")

function DefaultUIViewLocator.LoadAsync(name, type)
    local result = CS.CSObject.Asynchronous[CS.CSName.ProgressResult_1_Single](true)
    Executors.Instance:RunOnCoroutineNoReturn(Coroutine.GetEnumerator(function ()
        DefaultUIViewLocator.DoLoad(result, name, type)
    end))
    return result
end

function DefaultUIViewLocator.DoLoad(promise, name, type)
    promise:UpdateProgress(0)
    local request = CS.CSObject.Resources.LoadAsync(name, type)
    while not request.isDone do
        promise:UpdateProgress(request.progress)
        Coroutine.Wait(3)
    end

    local ins = CS.CSObject.Object.Instantiate(request.asset)
    ins.name = name

    promise:UpdateProgress(1)
    promise:SetResult(ins)
end

function DefaultUIViewLocator:dtor()
    
end

return DefaultUIViewLocator