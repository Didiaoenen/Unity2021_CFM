local Layer = require("Luaframework.Views.Layer")

local LayerManager = class("LayerManager")

local layers = {
	{Name = "SceneLayer", OrderInLayer = 0, OrderStep = 10},
	{Name = "BackgroudLayer", OrderInLayer = 1000, OrderStep = 10},
	{Name = "NormalLayer", OrderInLayer = 2000, OrderStep = 10},
	{Name = "InfoLayer", OrderInLayer = 3000, OrderStep = 10},
	{Name = "TipLayer", OrderInLayer = 4000, OrderStep = 10},
	{Name = "TopLayer", OrderInLayer = 5000, OrderStep = 10},
}

local instance = nil

function LayerManager.Ins()
    if not instance then
        instance = LayerManager()
        instance:ctor()
    end
    return instance
end

function LayerManager:ctor()
    self.layers = {}
end

function LayerManager:OnEnable()
end

function LayerManager:OnDisable()
end

function LayerManager:InitLayers()
    for i, v in ipairs(layers) do
        local layer = Layer(v)
        table.insert(self.layers, layer)
    end    
end

function LayerManager:GetLayer(name)
    return table.find(self.layers, function (i, v)
        return v.Name == name
    end)
end

return LayerManager