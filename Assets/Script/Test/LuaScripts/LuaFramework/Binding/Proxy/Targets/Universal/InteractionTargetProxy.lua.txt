local TargetProxyBase = require("LuaFramework.Binding.Proxy.Targets.TargetProxyBase")
local IObtainable = require("LuaFramework.Binding.Proxy.IObtainable")
local BindingMode = require("LuaFramework.Binding.BindingMode")

local InteractionTargetProxy = class("InteractionTargetProxy", TargetProxyBase, IObtainable)

function InteractionTargetProxy.get:DefaultMode()
   return BindingMode.OneWayToSource
end

function InteractionTargetProxy:ctor(target, interactionAction)
   TargetProxyBase.ctor(self, target)
   self.interactionAction = interactionAction
   self.handler = bindevent(self, self.OnRequest)
end

function InteractionTargetProxy:GetValue()
   return self.handler
end

function InteractionTargetProxy:OnRequest(sender, args)
   local target = self.target
   if nil == target then
      return
   end

   local action = classget(self.target, self.interactionAction)
   if action then
      action:OnRequest(sender, args)
   end
end

return InteractionTargetProxy
