local FieldTargetProxy = require("LuaFramework.Binding.Proxy.Targets.Universal.FieldTargetProxy")

local UnityFieldProxy = class("UnityFieldProxy", FieldTargetProxy)

function UnityFieldProxy.get:DefaultMode()
    
end

function UnityFieldProxy:ctor(target, fieldInfo, unityEvent)
    FieldTargetProxy.ctor(self)
    self.unityEvent = unityEvent
end

function UnityFieldProxy:DoSubscribeForValueChange(target)
    if not self.unityEvent or not target then
        return
    end

    self.unityEvent:AddListener(self, self.OnValueChanged)
end

function UnityFieldProxy:DoUnsubscribeForValueChange(target)
    if self.unityEvent then
        self.unityEvent.RemoveListener(self, self.OnValueChanged);
    end
end

function UnityFieldProxy:OnValueChanged()
    self:RaiseValueChanged()
end

function UnityFieldProxy:dtor()
    
end

return UnityFieldProxy