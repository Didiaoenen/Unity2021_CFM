local ValueTargetProxyBase = require("LuaFramework.Binding.Proxy.Targets.ValueTargetProxyBase")
local BindingMode = require("LuaFramework.Binding.BindingMode")

local FieldTargetProxy = class("FieldTargetProxy", ValueTargetProxyBase)

function FieldTargetProxy.get:DefaultMode()
    return BindingMode.OneWay
end

function FieldTargetProxy:ctor(target, fieldInfo)
    ValueTargetProxyBase.ctor(self, target)
    self.fieldInfo = fieldInfo
end

function FieldTargetProxy:GetValue()
    local target = self.target
    if not target then
        return
    end

    return self.fieldInfo
end

function FieldTargetProxy:SetValue(value)
    local target = self.target
    if not target then
        return
    end

    target[self.fieldInfo] = value
end

function FieldTargetProxy:dtor()
    
end

return FieldTargetProxy