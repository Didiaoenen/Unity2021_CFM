local SourceProxyBase = require("LuaFramework.Binding.Proxy.Sources.SourceProxyBase")
local IObtainable = require("LuaFramework.Binding.Proxy.IObtainable")
local ProxyInvoker = require("LuaFramework.Binding.Reflection.ProxyInvoker")

local MethodNodeProxy = class("MethodNodeProxy", SourceProxyBase, IObtainable)

function MethodNodeProxy:ctor(source, methodInfo)
   SourceProxyBase.ctor(self, source)
   IObtainable.ctor(self)
   self.methodInfo = methodInfo
   self.invoker = ProxyInvoker.new(self.source, self.methodInfo)
end

function MethodNodeProxy:GetValue()
   return self.invoker
end

function MethodNodeProxy:dtor()
end

return MethodNodeProxy
