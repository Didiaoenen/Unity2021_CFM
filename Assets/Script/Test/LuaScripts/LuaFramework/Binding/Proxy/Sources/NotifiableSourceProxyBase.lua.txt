local SourceProxyBase = require("LuaFramework.Binding.Proxy.Sources.SourceProxyBase")
local TableExtention = require("LuaFramework.Common.TableExtention")

local NotifiableSourceProxyBase = class("NotifiableSourceProxyBase", SourceProxyBase)

function NotifiableSourceProxyBase.set:ValueChanged(value)
    setcallback(self.valueChanged, value)
end

local names = {"INotifiable"}

function NotifiableSourceProxyBase:ctor(source)
    SourceProxyBase.ctor(self, source)
    self.valueChanged = {}
end

function NotifiableSourceProxyBase:RaiseValueChanged()
    TableExtention.Foreach(self.valueChanged, function (i, v)
        v.callback(v.this)
    end)
end

function NotifiableSourceProxyBase:ContainsName(name)
    for i, v in ipairs(names) do
        if v == name then
            return true
        end
    end
    return false
end

function NotifiableSourceProxyBase:dtor()
    
end

return NotifiableSourceProxyBase