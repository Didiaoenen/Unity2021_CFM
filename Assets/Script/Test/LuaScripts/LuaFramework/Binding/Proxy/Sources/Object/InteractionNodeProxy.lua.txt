local SourceProxyBase = require("LuaFramework.Binding.Proxy.Sources.SourceProxyBase")

local InteractionNodeProxy = class("InteractionNodeProxy", SourceProxyBase)

function InteractionNodeProxy:ctor(source, request)
    SourceProxyBase.ctor(self, source)
    self.request = request
    self.invoker = nil
    self:BindEvent()
end

function InteractionNodeProxy:BindEvent()
    if self.source[self.request] then
        self.source[self.request].Raised = function (sender, args)
            self:OnRaised(sender, args)
        end
    end
end

function InteractionNodeProxy:UnbindEvent()
    if self.source[self.request] then
        self.source[self.request].Raised = nil
    end
end

function InteractionNodeProxy:OnRaised(sender, args)
    if self.invoker then
        self.invoker:Invoke(sender, args)
    end
end

function InteractionNodeProxy:SetValue(value)
    self.invoker = value
end

function InteractionNodeProxy:dtor()
    
end

return InteractionNodeProxy