local ObjectSourceDescription = require("LuaFramework.Binding.Proxy.Sources.Object.ObjectSourceDescription")

local BindingDescription = class("BindingDescription")

BindingDescription.__getter.TargetName = function (this, k)
    return this.targetName
end

BindingDescription.__setter.TargetName = function (this, k, v)
    this.targetName = v
end

BindingDescription.__getter.UpdateTrigger = function (this, k)
    return this.updateTrigger
end

BindingDescription.__setter.UpdateTrigger = function (this, k, v)
    this.updateTrigger = v
end

BindingDescription.__getter.Converter = function (this, k)
    return this.converter
end

BindingDescription.__setter.Converter = function (this, k, v)
    this.converter = v
end

BindingDescription.__getter.Mode = function (this, k)
    return this.mode
end

BindingDescription.__setter.Mode = function (this, k, v)
    this.mode = v
end

BindingDescription.__getter.Source = function (this, k)
    return this.source
end

BindingDescription.__setter.Source = function (this, k, v)
    this.source = v
end

BindingDescription.__getter.CommandParameter = function (this, k)
    return this.commandParameter
end

BindingDescription.__setter.CommandParameter = function (this, k, v)
    this.commandParameter = v
end

function BindingDescription:ctor(targetName, path, converter, mode)
    self.targetName = targetName
    self.mode = mode
    self.converter = converter
    self.source = ObjectSourceDescription()
    self.source.Path = path
    self.updateTrigger = nil
    self.commandParameter = nil
end

return BindingDescription