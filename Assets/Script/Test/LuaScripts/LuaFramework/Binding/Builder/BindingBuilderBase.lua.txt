local BindingDescription = require("LuaFramework.Binding.BindingDescription")
local ObjectSourceDescription = require("LuaFramework.Binding.Proxy.Sources.Object.ObjectSourceDescription")

local BindingBuilderBase = class("BindingBuilderBase")

function BindingBuilderBase:ctor(context, target)
    assert(context, "")
    assert(target, "")

    self.context = context
    self.target = target

    self.builded = false
    self.scopeKey = nil
    self.description = BindingDescription.new()
    self.description.Mode = BindingMode.Default
end

function BindingBuilderBase:SetMode(mode)
    self.description.Mode = mode
end

function BindingBuilderBase:SetMemberPath(pathText)
    local path = PathParse.Parse(pathText)
    self:SetMemberPathWithPath(path)
end

function BindingBuilderBase:SetMemberPathWithPath(path)
    self.description.Source = ObjectSourceDescription.new()
    self.description.Source.Path = path
end

function BindingBuilderBase:SetStaticMemberPath(pathText)
    
end

function BindingBuilderBase:SetExpression(expression)
    
end

function BindingBuilderBase:SetCommandParameter(parameter)
    
end

function BindingBuilderBase:CheckBindingDescription()
    if not self.description.TargetName or self.description.TargetName == "" then
        error("")
    end

    if not self.description.Source then
        error("")        
    end
end

function BindingBuilderBase:Build()
    if self.builded then
        return                
    end

    self:CheckBindingDescription()
    self.context:AddBySingleDesc(self.target, self.description, self.scopeKey)
    self.builded = true
end

function BindingBuilderBase:dtor()

end

return BindingBuilderBase