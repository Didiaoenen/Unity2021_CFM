local NotifyPropertyChanged = require("LuaFramework.Binding.NotifyPropertyChanged")
local PropertyChangedEventArgs = require("LuaFramework.Binding.PropertyChangedEventArgs")

local ObservableObject = class("ObservableObject", NotifyPropertyChanged)

function ObservableObject:ctor()
    NotifyPropertyChanged.ctor(self)
end

function ObservableObject:RaisePropertyChanged(property)
    self:RaisePropertyChangedWithParam(PropertyChangedEventArgs.new(property))
end

function ObservableObject:RaisePropertyChangedWithParam(param)
    table.foreach(self.propertyChanged, function (i, v)
        v.callback(v.this, self, param)
    end)
end

function ObservableObject:Set(field, newValue, property, broadcast)
    if self[field.name] ~= newValue then
        self[field.name] = newValue
        self:RaisePropertyChanged(property)
    end
end

function ObservableObject:dtor()
    
end

return ObservableObject