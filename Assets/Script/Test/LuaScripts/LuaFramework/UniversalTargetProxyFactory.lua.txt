local ObservableTargetProxy = require("LuaFramework/ObservableTargetProxy")
local InteractionTargetProxy = require("LuaFramework/InteractionTargetProxy")
local PropertyTargetProxy = require("LuaFramework/PropertyTargetProxy")
local FieldTargetProxy = require("LuaFramework/FieldTargetProxy")
local EventTargetProxy = require("LuaFramework/EventTargetProxy")
local MethodTargetProxy = require("LuaFramework/MethodTargetProxy")

local UniversalTargetProxyFactory = class("UniversalTargetProxyFactory")

function UniversalTargetProxyFactory:ctor()
    
end

function UniversalTargetProxyFactory:CreateProxy(target, description)
    local memberInfo = target[description.TargetName]
    if not memberInfo then
        error("")
        return
    end

    if type(memberInfo) == "userdata" then
    else
        return PropertyTargetProxy(target, description.TargetName)
    end
end

return UniversalTargetProxyFactory