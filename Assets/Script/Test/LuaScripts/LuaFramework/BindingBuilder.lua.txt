local BindingBuilderBase = require("BindingBuilderBase")

local BindingBuilder = class("BindingBuilder", BindingBuilderBase)

function BindingBuilder:ctor(context, target)
    
end

function BindingBuilder:For(targetName, updateTrigger)
    return self
end

function BindingBuilder:To(path)
    self:SetMemberPath(path)
    return self    
end

function BindingBuilder:OneWay()
    self:SetMode(BindingMode.OneWay)
    return self    
end

function BindingBuilder:OneWayToSource()
    self:SetMode(BindingMode.OneWayToSource)
    return self    
end

function BindingBuilder:TwoWay()
    self:SetMode(BindingMode.TwoWay)
    return self    
end

function BindingBuilder:OneTime()
    self:SetMode(BindingMode.OneTime)
    return self    
end

function BindingBuilder:CommandParameter(parameter)
    self:SetCommandParameter(parameter)
    return self    
end

return BindingBuilder